<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:p="http://www.springframework.org/schema/p"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:mvc="http://www.springframework.org/schema/mvc"
  xsi:schemaLocation="
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
    
    <!-- 扫描controller（controller层注入） -->
   <context:component-scan base-package="upgrade"/>
   
   <!-- 使用Annotation自动注册Bean,只扫描@Controller -->
	<context:component-scan base-package="upgrade" use-default-filters="false"><!-- base-package 如果多个，用“,”分隔 -->
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- 视图文件解析配置 -->
	<!-- <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="${web.view.prefix}"/>
		<property name="suffix" value="${web.view.suffix}"/>
	</bean> -->
	
   <!-- 避免IE在ajax请求时，返回json出现下载 -->
   <!--  <bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">		
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>-->
	
	<!-- 上传文件拦截，设置最大上传文件大小   10M=10*1024*1024(B)=10485760 bytes -->  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <property name="maxUploadSize" value="${web.maxUploadSize}" />  
    </bean>
    
	<bean id="themeChangeInterceptor"
		class="org.springframework.web.servlet.theme.ThemeChangeInterceptor">
		<property name="paramName" value="theme" />
	</bean>

	<bean id="themeResolver"
		class="org.springframework.web.servlet.theme.CookieThemeResolver">
		<property name="defaultThemeName" value="default" />
	</bean>

	<!-- ExceptionResolver begin -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver" />
	<!-- ExceptionResolver end -->

	<!-- AcceptHeaderLocaleResolver,SessionLocaleResolver,CookieLocaleResolver互斥只能用1个 
		,id 必须为localeResolver -->
	<!-- <bean id="localeResolver" class="org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver"/> -->
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<property name="defaultLocale" value="zh_CN" />
	</bean>

	<bean id="localeChangeInterceptor"
		class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
		<property name="paramName" value="lang" />
	</bean>

	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="interceptors">
			<list>
				<ref bean="localeChangeInterceptor" />
				<ref bean="themeChangeInterceptor" />
			</list>
		</property>
	</bean>
	
	<!-- deal with static content like css,gif and so on -->
	<mvc:default-servlet-handler/>
	
	<bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter" />
	
	<!-- xstream start -->
	<bean id="xStreamMarshaller" class="org.springframework.oxm.xstream.XStreamMarshaller">
	</bean>
	<!-- xstream end -->
	
	<!-- marshallingConverter可用jaxb或者xstream，jaxb需要在javabean上添加annotation,总体来说xstream好 -->
	<bean id="marshallingConverter"
		class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
		<!-- 构造函数里判断参数是否为Unmarshaller类型，如果是，则同时设置Unmarshaller属性和marshaller属性 -->
		<constructor-arg ref="xStreamMarshaller" />
		<property name="supportedMediaTypes" value="application/xml" />
	</bean>
	
	<!-- jsonConverter用到jackson json lib -->
	<bean id="jsonConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes" value="application/json"/>
	</bean>
	
	<!-- 完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.FormHttpMessageConverter" />
				<ref bean="stringHttpMessageConverter" />
				<ref bean="marshallingConverter" />
				<ref bean="jsonConverter" />
				<bean
					class="org.springframework.http.converter.BufferedImageHttpMessageConverter" />
				<bean
					class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
				<bean
					class="org.springframework.http.converter.ResourceHttpMessageConverter" />
			</list>
		</property>
	</bean>

	
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="1" />
		<property name="defaultContentType" value="text/html" />
		<!-- 是否从扩展名中取mediaType(如xxx.xml,xxx.html),与mediaTypes匹配 -->
		<property name="favorPathExtension" value="true" />
		<!-- 默认值:format,当favorParameter=true,根据parameterName来获取mediaType,与mediaTypes匹配 -->
		<property name="parameterName" value="mediaType" />
		<!-- 是否从请求的url路径中获取 mediaType(如:/xxx/xxx?mediaType=xml),与mediaTypes匹配 -->
		<property name="favorParameter" value="true" />
		<!-- 是否忽略请求头里的Accept属性 -->
		<property name="ignoreAcceptHeader" value="false" />
		<property name="mediaTypes">
			<map>
				<entry key="html" value="text/html" />
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />
				<entry key="txt" value="text/plain" />
				<entry key="xls" value="application/vnd.ms-excel" />
			</map>
		</property>
		<property name="defaultViews">
			<list>
				<bean
					class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView">
					<property name="marshaller" ref="xStreamMarshaller" />
				</bean>
			</list>
		</property>
		
		<!-- 对转向页面的路径解析。prefix：前缀， suffix：后缀 -->
		
		<property name="viewResolvers">
			<list>
				<bean
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="viewClass"
						value="org.springframework.web.servlet.view.JstlView" /><!-- 视图页面使用JSTL标签，因此需要使用JstlView -->
					<property name="prefix" value="/" />
					<property name="suffix" value=".jsp"></property>
				</bean>
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
			</list>
		</property>
	</bean>
 
</beans>